// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcppParseFeature
void rcppParseFeature(const char* js);
RcppExport SEXP _mapboxGeojson_rcppParseFeature(SEXP jsSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const char* >::type js(jsSEXP);
    rcppParseFeature(js);
    return R_NilValue;
END_RCPP
}
// rcppParseGeometry
void rcppParseGeometry(const char* js);
RcppExport SEXP _mapboxGeojson_rcppParseGeometry(SEXP jsSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const char* >::type js(jsSEXP);
    rcppParseGeometry(js);
    return R_NilValue;
END_RCPP
}
// rcppParseLineString
Rcpp::NumericMatrix rcppParseLineString(const char* js);
RcppExport SEXP _mapboxGeojson_rcppParseLineString(SEXP jsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const char* >::type js(jsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcppParseLineString(js));
    return rcpp_result_gen;
END_RCPP
}
// template_point
Rcpp::NumericVector template_point();
RcppExport SEXP _mapboxGeojson_template_point() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(template_point());
    return rcpp_result_gen;
END_RCPP
}
// template_linestring
Rcpp::NumericVector template_linestring();
RcppExport SEXP _mapboxGeojson_template_linestring() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(template_linestring());
    return rcpp_result_gen;
END_RCPP
}
// MultiPolygonCoordinates
Rcpp::List MultiPolygonCoordinates(const char* js);
RcppExport SEXP _mapboxGeojson_MultiPolygonCoordinates(SEXP jsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const char* >::type js(jsSEXP);
    rcpp_result_gen = Rcpp::wrap(MultiPolygonCoordinates(js));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mapboxGeojson_rcppParseFeature", (DL_FUNC) &_mapboxGeojson_rcppParseFeature, 1},
    {"_mapboxGeojson_rcppParseGeometry", (DL_FUNC) &_mapboxGeojson_rcppParseGeometry, 1},
    {"_mapboxGeojson_rcppParseLineString", (DL_FUNC) &_mapboxGeojson_rcppParseLineString, 1},
    {"_mapboxGeojson_template_point", (DL_FUNC) &_mapboxGeojson_template_point, 0},
    {"_mapboxGeojson_template_linestring", (DL_FUNC) &_mapboxGeojson_template_linestring, 0},
    {"_mapboxGeojson_MultiPolygonCoordinates", (DL_FUNC) &_mapboxGeojson_MultiPolygonCoordinates, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_mapboxGeojson(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
